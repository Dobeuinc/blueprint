#!/usr/bin/env node
'use strict';

var program = require ('commander')
  , path = require ('path')
  , winston = require ('winston')
  , async = require ('async')
  , lib = require ('../lib')
  ;

var Installer = lib.Installer
  , ModulesFile = lib.ModulesFile
  ;

program
  .arguments ('<module-name>')
  .parse (process.argv);

var currPath = process.cwd ();
var moduleFilePath = path.resolve (currPath, 'app/modules.js');

// Run the npm installer to install the module in the application. Then,
// open the module file and add this module to the list.
async.waterfall ([
  function (callback) { Installer (currPath, {save: true}, callback); },
  function (installer, callback) {
    installer.uninstall ([program.args[0]], function (err) {
      return callback (err, installer);
    });
  },
  function (installer, callback) { installer.prune (callback); },
  function (result, callback) { ModulesFile (moduleFilePath, callback); },
  function (modulesFile, callback) {
    modulesFile.remove (program.args[0], function (err, removed) {
      return callback (err, modulesFile, removed);
    });
  },
  function (modulesFiles, updated, callback) {
    if (updated) return modulesFiles.save (callback);
    return callback (null);
  }
], completionHandler ('successfully uninstalled module'));

function completionHandler (msg) {
  return function (err) {
    if (err)
      winston.log ('error', util.inspect (err));
    else
      winston.log ('info', msg);
  }
}
