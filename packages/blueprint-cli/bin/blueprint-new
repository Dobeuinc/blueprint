#!/usr/bin/env node

'use strict';

var program = require ('commander')
  , path = require ('path')
  , winston = require ('winston')
  , async = require ('async')
  , npm = require ('npm')
  , fse = require ('fs-extra')
  , lib = require ('../lib')
  ;

var TemplateDir = lib.TemplateDir
  , Installer = lib.Installer
  ;

program
  .option ('-n, --name <name>', 'name of the application')
  .option ('-o, --output-path [path]', 'output path [./]', './')
  .option ('--version [version]', 'version number [0.0.1]', '0.0.1')
  .option ('--license [license]', 'distribution license [Apache-2.0]', 'Apache-2.0')
  .option ('--debug', 'enable debug messages')
  .parse (process.argv);

if (program.debug)
  winston.level = 'debug';

var templatePath = path.resolve (__dirname, '../templates/blueprint-new');
var dstPath = path.resolve (program.outputPath, program.name);

winston.log ('info', 'target output: %s', dstPath);

async.waterfall ([
  function (callback) {
    fse.ensureDir (dstPath, callback);
  },

  function (made, callback) {
    winston.log ('info', 'generating new application...');

    // Define the view used to render the templates, then render the templates with
    // this view of the system.
    var view = {
      project : {
        name: program.name,
        version: program.version,
        license: program.license
      }
    };

    var templates = new TemplateDir (templatePath);
    templates.render (dstPath, view, callback);
  },

  function (callback) {
    Installer (dstPath, callback);
  },

  function (installer, callback) {
    async.series ([
      function (callback) {
        const dependencies = [
          '@onehilltech/blueprint'
        ];

        installer.install (dependencies, callback);
      },

      function (callback) {
        const devDependencies = [
          'chai',
          'mocha',
          'superagent',
          'supertest'
        ];

        installer.install (devDependencies, callback);
      },

      function (callback) {
        installer.bin (callback);
      }
    ], callback);
  }
], onComplete);

function onComplete (err) {
  if (err)
    winston.log ('error', err);
  else
    winston.log ('info', 'Blueprint.js application project is ready!')
}

